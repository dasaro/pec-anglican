(def domain-language {})
(def domain-description {})
(alter-var-root #'domain-description #(assoc-in % [:cprops] []))
(alter-var-root #'domain-description #(assoc-in % [:pprops] []))
(alter-var-root #'domain-language #(assoc % :fluents (conj (:fluents domain-language) :engagement)))
(alter-var-root #'domain-language #(assoc % :fluents (conj (:fluents domain-language) :taskCorrect)))
(alter-var-root #'domain-description #(assoc-in % [:iprop :outcomes] []))
(alter-var-root #'domain-description #(assoc-in % [:iprop :outcomes 0] (merge {:taskCorrect "true"} {:engagement "true"} )))
(alter-var-root #'domain-description #(assoc-in % [:iprop :probs] (vec (conj (get-in % [:iprop :probs]) (/ 1 1)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 0 :outcomes] []))
(alter-var-root #'domain-description #(assoc-in % [:cprops 0 :precondition] (fn [state] (and (= (list (get-in state (keys {:badPosture "false"}))) (vals {:badPosture "false"})) (= (list (get-in state (keys {:lowAttention "false"}))) (vals {:lowAttention "false"})) (= (list (get-in state (keys {:eyesNotFollowingTarget "false"}))) (vals {:eyesNotFollowingTarget "false"})) ))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 0 :outcomes 0] (merge {} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 0 :probs] (vec (conj (get-in % [:cprops 0 :probs]) (/ 6 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 0 :outcomes 1] (merge {:engagement "true"} {:taskCorrect "true"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 0 :probs] (vec (conj (get-in % [:cprops 0 :probs]) (/ 4 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 1 :outcomes] []))
(alter-var-root #'domain-description #(assoc-in % [:cprops 1 :precondition] (fn [state] (and (= (list (get-in state (keys {:engagement "true"}))) (vals {:engagement "true"})) (= (list (get-in state (keys {:badPosture "false"}))) (vals {:badPosture "false"})) (= (list (get-in state (keys {:lowAttention "false"}))) (vals {:lowAttention "false"})) (= (list (get-in state (keys {:eyesNotFollowingTarget "true"}))) (vals {:eyesNotFollowingTarget "true"})) ))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 1 :outcomes 0] (merge {} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 1 :probs] (vec (conj (get-in % [:cprops 1 :probs]) (/ 8 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 1 :outcomes 1] (merge {:taskCorrect "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 1 :probs] (vec (conj (get-in % [:cprops 1 :probs]) (/ 1 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 1 :outcomes 2] (merge {:engagement "false"} {:taskCorrect "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 1 :probs] (vec (conj (get-in % [:cprops 1 :probs]) (/ 1 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 2 :outcomes] []))
(alter-var-root #'domain-description #(assoc-in % [:cprops 2 :precondition] (fn [state] (and (= (list (get-in state (keys {:engagement "false"}))) (vals {:engagement "false"})) (= (list (get-in state (keys {:badPosture "false"}))) (vals {:badPosture "false"})) (= (list (get-in state (keys {:lowAttention "false"}))) (vals {:lowAttention "false"})) (= (list (get-in state (keys {:eyesNotFollowingTarget "true"}))) (vals {:eyesNotFollowingTarget "true"})) ))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 2 :outcomes 0] (merge {} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 2 :probs] (vec (conj (get-in % [:cprops 2 :probs]) (/ 7 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 2 :outcomes 1] (merge {:taskCorrect "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 2 :probs] (vec (conj (get-in % [:cprops 2 :probs]) (/ 3 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 3 :outcomes] []))
(alter-var-root #'domain-description #(assoc-in % [:cprops 3 :precondition] (fn [state] (and (= (list (get-in state (keys {:badPosture "false"}))) (vals {:badPosture "false"})) (= (list (get-in state (keys {:lowAttention "true"}))) (vals {:lowAttention "true"})) (= (list (get-in state (keys {:eyesNotFollowingTarget "false"}))) (vals {:eyesNotFollowingTarget "false"})) ))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 3 :outcomes 0] (merge {} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 3 :probs] (vec (conj (get-in % [:cprops 3 :probs]) (/ 9 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 3 :outcomes 1] (merge {:taskCorrect "true"} {:engagement "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 3 :probs] (vec (conj (get-in % [:cprops 3 :probs]) (/ 1 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 4 :outcomes] []))
(alter-var-root #'domain-description #(assoc-in % [:cprops 4 :precondition] (fn [state] (and (= (list (get-in state (keys {:badPosture "false"}))) (vals {:badPosture "false"})) (= (list (get-in state (keys {:lowAttention "true"}))) (vals {:lowAttention "true"})) (= (list (get-in state (keys {:eyesNotFollowingTarget "true"}))) (vals {:eyesNotFollowingTarget "true"})) ))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 4 :outcomes 0] (merge {} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 4 :probs] (vec (conj (get-in % [:cprops 4 :probs]) (/ 8 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 4 :outcomes 1] (merge {:engagement "false"} {:taskCorrect "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 4 :probs] (vec (conj (get-in % [:cprops 4 :probs]) (/ 2 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 5 :outcomes] []))
(alter-var-root #'domain-description #(assoc-in % [:cprops 5 :precondition] (fn [state] (and (= (list (get-in state (keys {:badPosture "true"}))) (vals {:badPosture "true"})) (= (list (get-in state (keys {:lowAttention "false"}))) (vals {:lowAttention "false"})) (= (list (get-in state (keys {:eyesNotFollowingTarget "false"}))) (vals {:eyesNotFollowingTarget "false"})) ))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 5 :outcomes 0] (merge {} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 5 :probs] (vec (conj (get-in % [:cprops 5 :probs]) (/ 8 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 5 :outcomes 1] (merge {:taskCorrect "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 5 :probs] (vec (conj (get-in % [:cprops 5 :probs]) (/ 1 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 5 :outcomes 2] (merge {:engagement "false"} {:taskCorrect "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 5 :probs] (vec (conj (get-in % [:cprops 5 :probs]) (/ 1 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 6 :outcomes] []))
(alter-var-root #'domain-description #(assoc-in % [:cprops 6 :precondition] (fn [state] (and (= (list (get-in state (keys {:badPosture "true"}))) (vals {:badPosture "true"})) (= (list (get-in state (keys {:lowAttention "false"}))) (vals {:lowAttention "false"})) (= (list (get-in state (keys {:eyesNotFollowingTarget "true"}))) (vals {:eyesNotFollowingTarget "true"})) ))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 6 :outcomes 0] (merge {} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 6 :probs] (vec (conj (get-in % [:cprops 6 :probs]) (/ 7 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 6 :outcomes 1] (merge {:taskCorrect "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 6 :probs] (vec (conj (get-in % [:cprops 6 :probs]) (/ 2 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 6 :outcomes 2] (merge {:engagement "false"} {:taskCorrect "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 6 :probs] (vec (conj (get-in % [:cprops 6 :probs]) (/ 1 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 7 :outcomes] []))
(alter-var-root #'domain-description #(assoc-in % [:cprops 7 :precondition] (fn [state] (and (= (list (get-in state (keys {:badPosture "true"}))) (vals {:badPosture "true"})) (= (list (get-in state (keys {:lowAttention "true"}))) (vals {:lowAttention "true"})) (= (list (get-in state (keys {:eyesNotFollowingTarget "true"}))) (vals {:eyesNotFollowingTarget "true"})) ))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 7 :outcomes 0] (merge {} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 7 :probs] (vec (conj (get-in % [:cprops 7 :probs]) (/ 6 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 7 :outcomes 1] (merge {:taskCorrect "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 7 :probs] (vec (conj (get-in % [:cprops 7 :probs]) (/ 2 10)))))
(alter-var-root #'domain-description #(assoc-in % [:cprops 7 :outcomes 2] (merge {:engagement "false"} {:taskCorrect "false"} )))
(alter-var-root #'domain-description #(assoc-in % [:cprops 7 :probs] (vec (conj (get-in % [:cprops 7 :probs]) (/ 2 10)))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 0 :subject] :lowAttention))
(alter-var-root #'domain-description #(assoc-in % [:pprops 0 :instant] 0))
(alter-var-root #'domain-description #(assoc-in % [:pprops 0 :outcomes] (vec (conj (get-in % [:pprops 0 :outcomes]) {:lowAttention "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 0 :probs] (vec (conj (get-in % [:pprops 0 :probs]) 1))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 0 :outcomes] (vec (conj (get-in % [:pprops 0 :outcomes]) {:lowAttention "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 0 :probs] (vec (conj (get-in % [:pprops 0 :probs]) 0))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 0 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 1 :subject] :eyesNotFollowingTarget))
(alter-var-root #'domain-description #(assoc-in % [:pprops 1 :instant] 0))
(alter-var-root #'domain-description #(assoc-in % [:pprops 1 :outcomes] (vec (conj (get-in % [:pprops 1 :outcomes]) {:eyesNotFollowingTarget "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 1 :probs] (vec (conj (get-in % [:pprops 1 :probs]) 1))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 1 :outcomes] (vec (conj (get-in % [:pprops 1 :outcomes]) {:eyesNotFollowingTarget "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 1 :probs] (vec (conj (get-in % [:pprops 1 :probs]) 0))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 1 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 2 :subject] :badPosture))
(alter-var-root #'domain-description #(assoc-in % [:pprops 2 :instant] 0))
(alter-var-root #'domain-description #(assoc-in % [:pprops 2 :outcomes] (vec (conj (get-in % [:pprops 2 :outcomes]) {:badPosture "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 2 :probs] (vec (conj (get-in % [:pprops 2 :probs]) 1))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 2 :outcomes] (vec (conj (get-in % [:pprops 2 :outcomes]) {:badPosture "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 2 :probs] (vec (conj (get-in % [:pprops 2 :probs]) 0))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 2 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 3 :subject] :lowAttention))
(alter-var-root #'domain-description #(assoc-in % [:pprops 3 :instant] 1))
(alter-var-root #'domain-description #(assoc-in % [:pprops 3 :outcomes] (vec (conj (get-in % [:pprops 3 :outcomes]) {:lowAttention "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 3 :probs] (vec (conj (get-in % [:pprops 3 :probs]) 1))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 3 :outcomes] (vec (conj (get-in % [:pprops 3 :outcomes]) {:lowAttention "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 3 :probs] (vec (conj (get-in % [:pprops 3 :probs]) 0))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 3 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 4 :subject] :eyesNotFollowingTarget))
(alter-var-root #'domain-description #(assoc-in % [:pprops 4 :instant] 1))
(alter-var-root #'domain-description #(assoc-in % [:pprops 4 :outcomes] (vec (conj (get-in % [:pprops 4 :outcomes]) {:eyesNotFollowingTarget "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 4 :probs] (vec (conj (get-in % [:pprops 4 :probs]) 1))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 4 :outcomes] (vec (conj (get-in % [:pprops 4 :outcomes]) {:eyesNotFollowingTarget "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 4 :probs] (vec (conj (get-in % [:pprops 4 :probs]) 0))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 4 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 5 :subject] :badPosture))
(alter-var-root #'domain-description #(assoc-in % [:pprops 5 :instant] 1))
(alter-var-root #'domain-description #(assoc-in % [:pprops 5 :outcomes] (vec (conj (get-in % [:pprops 5 :outcomes]) {:badPosture "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 5 :probs] (vec (conj (get-in % [:pprops 5 :probs]) 1))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 5 :outcomes] (vec (conj (get-in % [:pprops 5 :outcomes]) {:badPosture "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 5 :probs] (vec (conj (get-in % [:pprops 5 :probs]) 0))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 5 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 6 :subject] :eyesNotFollowingTarget))
(alter-var-root #'domain-description #(assoc-in % [:pprops 6 :instant] 2))
(alter-var-root #'domain-description #(assoc-in % [:pprops 6 :outcomes] (vec (conj (get-in % [:pprops 6 :outcomes]) {:eyesNotFollowingTarget "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 6 :probs] (vec (conj (get-in % [:pprops 6 :probs]) (/ 76 100)))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 6 :outcomes] (vec (conj (get-in % [:pprops 6 :outcomes]) {:eyesNotFollowingTarget "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 6 :probs] (vec (conj (get-in % [:pprops 6 :probs]) (- 1 (/ 76 100))))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 6 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 7 :subject] :lowAttention))
(alter-var-root #'domain-description #(assoc-in % [:pprops 7 :instant] 2))
(alter-var-root #'domain-description #(assoc-in % [:pprops 7 :outcomes] (vec (conj (get-in % [:pprops 7 :outcomes]) {:lowAttention "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 7 :probs] (vec (conj (get-in % [:pprops 7 :probs]) (/ 87 100)))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 7 :outcomes] (vec (conj (get-in % [:pprops 7 :outcomes]) {:lowAttention "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 7 :probs] (vec (conj (get-in % [:pprops 7 :probs]) (- 1 (/ 87 100))))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 7 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 8 :subject] :lowAttention))
(alter-var-root #'domain-description #(assoc-in % [:pprops 8 :instant] 3))
(alter-var-root #'domain-description #(assoc-in % [:pprops 8 :outcomes] (vec (conj (get-in % [:pprops 8 :outcomes]) {:lowAttention "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 8 :probs] (vec (conj (get-in % [:pprops 8 :probs]) 1))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 8 :outcomes] (vec (conj (get-in % [:pprops 8 :outcomes]) {:lowAttention "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 8 :probs] (vec (conj (get-in % [:pprops 8 :probs]) 0))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 8 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 9 :subject] :eyesNotFollowingTarget))
(alter-var-root #'domain-description #(assoc-in % [:pprops 9 :instant] 3))
(alter-var-root #'domain-description #(assoc-in % [:pprops 9 :outcomes] (vec (conj (get-in % [:pprops 9 :outcomes]) {:eyesNotFollowingTarget "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 9 :probs] (vec (conj (get-in % [:pprops 9 :probs]) 1))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 9 :outcomes] (vec (conj (get-in % [:pprops 9 :outcomes]) {:eyesNotFollowingTarget "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 9 :probs] (vec (conj (get-in % [:pprops 9 :probs]) 0))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 9 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 10 :subject] :badPosture))
(alter-var-root #'domain-description #(assoc-in % [:pprops 10 :instant] 3))
(alter-var-root #'domain-description #(assoc-in % [:pprops 10 :outcomes] (vec (conj (get-in % [:pprops 10 :outcomes]) {:badPosture "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 10 :probs] (vec (conj (get-in % [:pprops 10 :probs]) 1))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 10 :outcomes] (vec (conj (get-in % [:pprops 10 :outcomes]) {:badPosture "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 10 :probs] (vec (conj (get-in % [:pprops 10 :probs]) 0))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 10 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 11 :subject] :eyesNotFollowingTarget))
(alter-var-root #'domain-description #(assoc-in % [:pprops 11 :instant] 7))
(alter-var-root #'domain-description #(assoc-in % [:pprops 11 :outcomes] (vec (conj (get-in % [:pprops 11 :outcomes]) {:eyesNotFollowingTarget "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 11 :probs] (vec (conj (get-in % [:pprops 11 :probs]) (/ 7 100)))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 11 :outcomes] (vec (conj (get-in % [:pprops 11 :outcomes]) {:eyesNotFollowingTarget "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 11 :probs] (vec (conj (get-in % [:pprops 11 :probs]) (- 1 (/ 7 100))))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 11 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 12 :subject] :eyesNotFollowingTarget))
(alter-var-root #'domain-description #(assoc-in % [:pprops 12 :instant] 8))
(alter-var-root #'domain-description #(assoc-in % [:pprops 12 :outcomes] (vec (conj (get-in % [:pprops 12 :outcomes]) {:eyesNotFollowingTarget "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 12 :probs] (vec (conj (get-in % [:pprops 12 :probs]) (/ 89 100)))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 12 :outcomes] (vec (conj (get-in % [:pprops 12 :outcomes]) {:eyesNotFollowingTarget "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 12 :probs] (vec (conj (get-in % [:pprops 12 :probs]) (- 1 (/ 89 100))))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 12 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 13 :subject] :eyesNotFollowingTarget))
(alter-var-root #'domain-description #(assoc-in % [:pprops 13 :instant] 9))
(alter-var-root #'domain-description #(assoc-in % [:pprops 13 :outcomes] (vec (conj (get-in % [:pprops 13 :outcomes]) {:eyesNotFollowingTarget "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 13 :probs] (vec (conj (get-in % [:pprops 13 :probs]) (/ 74 100)))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 13 :outcomes] (vec (conj (get-in % [:pprops 13 :outcomes]) {:eyesNotFollowingTarget "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 13 :probs] (vec (conj (get-in % [:pprops 13 :probs]) (- 1 (/ 74 100))))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 13 :precondition] (fn [state] true)))
(alter-var-root #'domain-description #(assoc-in % [:pprops 14 :subject] :eyesNotFollowingTarget))
(alter-var-root #'domain-description #(assoc-in % [:pprops 14 :instant] 11))
(alter-var-root #'domain-description #(assoc-in % [:pprops 14 :outcomes] (vec (conj (get-in % [:pprops 14 :outcomes]) {:eyesNotFollowingTarget "true"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 14 :probs] (vec (conj (get-in % [:pprops 14 :probs]) 1))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 14 :outcomes] (vec (conj (get-in % [:pprops 14 :outcomes]) {:eyesNotFollowingTarget "false"}))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 14 :probs] (vec (conj (get-in % [:pprops 14 :probs]) 0))))
(alter-var-root #'domain-description #(assoc-in % [:pprops 14 :precondition] (fn [state] true)))
(alter-var-root #'domain-language #(assoc % :actions (conj (:actions domain-language) :eyesNotFollowingTarget)))
(alter-var-root #'domain-language #(assoc % :actions (conj (:actions domain-language) :lowAttention)))
(alter-var-root #'domain-language #(assoc % :actions (conj (:actions domain-language) :badPosture)))
(alter-var-root #'domain-language #(assoc % :maxinst 12))
